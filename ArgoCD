
---------ArgoCD Attachment Scrpit---------------


pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "${AWS_ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com/${ECR_REPO}"
        IMAGE_TAG = "${env.BUILD_NUMBER}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('ECR Login') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-eks-iam-cred']]) {
                    sh "aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com"
                }
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE}:${IMAGE_TAG} ."
                    sh "docker push ${DOCKER_IMAGE}:${IMAGE_TAG}"
                }
            }
        }

        stage('Trivy Image Scan') {
            steps {
                catchError {
                    sh "trivy image --severity HIGH,CRITICAL --format template --template @/home/master/html.tpl -o /home/master/backend-test-report/report-latest.html ${DOCKER_IMAGE}:${IMAGE_TAG}"
                }
            }
        }

        stage('Publish Trivy Report') {
            steps {
                publishHTML(target: [
                    reportName: 'Trivy Scan Report',
                    reportDir: '/home/master/backend-test-report/',
                    reportFiles: 'report-latest.html',
                    indexFile: 'report-latest.html',
                    allowMissing: false,
                    alwaysLinkToLastBuild: true,
                    keepAll: true
                ])
            }
        }

        stage('Update deployment.yaml & Push to Git') {
            steps {
                script {
                    // Update deployment.yaml with new image
                    sh "sed -i 's|image: .*|image: ${DOCKER_IMAGE}:${IMAGE_TAG}|' deployment.yaml"

                    // Commit and push the change to Git
                    sh '''
                        git config user.email "jenkins@kodukk.com"
                        git config user.name "Jenkins CI"
                        git add deployment.yaml
                        git commit -m "Update deployment to ${DOCKER_IMAGE}:${IMAGE_TAG}"
                        git push origin main
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
            script {
                sh "docker rmi ${DOCKER_IMAGE}:${IMAGE_TAG}"
            }
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}


***********************************END SCRIPT***************************************



Jenkins Update process



