---------ArgoCD Attachment Scrpit---------------

pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('ECR Login') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-eks-iam-cred']]){
                        sh "aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com"
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${ECR_REPO}:${env.BUILD_NUMBER} ."
                }
            }
        }

        stage('Image Scan') {
            steps {
                catchError {
                    sh "trivy image --severity HIGH,CRITICAL --format template --template @/home/master/html.tpl -o /home/master/backend-test-report/report-latest.html ${ECR_REPO}:${env.BUILD_NUMBER}"
                }
            }
        }

        stage('Publish Report') {
            steps {
                publishHTML(target: [
                    reportName: 'Trivy Scan Report',
                    reportDir: '/home/master/backend-test-report/',
                    reportFiles: 'report-latest.html',
                    indexFile: 'report-latest.html',
                    allowMissing: false,
                    alwaysLinkToLastBuild: true,
                    keepAll: true
                ])
            }
        }   

        stage('Push Docker Image') {
            steps {
                script {
                    sh "docker tag ${ECR_REPO}:${env.BUILD_NUMBER} ${AWS_ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com/${ECR_REPO}:${env.BUILD_NUMBER}"
                    sh "DOCKER_CLI_EXPERIMENTAL=1 docker push ${AWS_ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com/${ECR_REPO}:${env.BUILD_NUMBER}"
                }
            }
        }

        stage('Update Manifest in Git for ArgoCD') {
            steps {
                script {
                    // Update the deployment.yaml image
                    sh "sed -i 's|image: .*|image: ${AWS_ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com/${ECR_REPO}:${env.BUILD_NUMBER}|' argocd-manifest/deployment.yaml"

                    // Commit and push back to Git
                    sh """
                        git config user.name "ci-bot"
                        git config user.email "ci-bot@company.com"
                        git add argocd-manifest/deployment.yaml
                        git commit -m "Update image to ${AWS_ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com/${ECR_REPO}:${env.BUILD_NUMBER}"
                        git push origin main
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
            script {
                sh "docker rmi ${ECR_REPO}:${env.BUILD_NUMBER}"
                sh "docker rmi ${AWS_ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com/${ECR_REPO}:${env.BUILD_NUMBER}"
            }
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}



***********************************END SCRIPT***************************************



Jenkins Update process



